{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Descri\u00e7\u00e3o do Projeto ANP","text":""},{"location":"#descricao-do-projeto-atender-a-uma-empresa-de-medio-porte-no-ramo-de-transporteslogistica-que-tem-atuacao-em-4-estados-brasileiros","title":"Descri\u00e7\u00e3o do Projeto: Atender a uma empresa de m\u00e9dio porte no ramo de transportes/log\u00edstica que tem atua\u00e7\u00e3o em 4 estados brasileiros.","text":""},{"location":"#resumo-do-projeto-download-de-dados-da-anp-para-o-ano-atual-e-anterior-exemplo-2022-e-2023-armazenamento-dessas-informacoes-tratamento-dos-dados-e-envio-para-as-unidades-do-ceara-maranhao-rio-de-janeiro-e-sao-paulo","title":"Resumo do Projeto: Download de dados da ANP para o Ano Atual e Anterior (exemplo: 2022 e 2023), armazenamento dessas informa\u00e7\u00f5es, tratamento dos dados e envio para as Unidades do Cear\u00e1, Maranh\u00e3o, Rio de Janeiro e S\u00e3o Paulo.","text":""},{"location":"#fluxo-da-informacao","title":"Fluxo da Informa\u00e7\u00e3o:","text":""},{"location":"fluxo/","title":"Fluxo","text":""},{"location":"fluxo/#0-bibliotecas","title":"0 - Bibliotecas","text":"<pre><code>import warnings\nimport pandas as pd\nimport os\n</code></pre>"},{"location":"fluxo/#1-importar-notebook-com-as-bibliotecas","title":"1 - Importar Notebook com as Bibliotecas","text":"<pre><code>%run bibliotecas.ipynb\n</code></pre>"},{"location":"fluxo/#2-download-dos-arquivos","title":"2 - Download dos Arquivos","text":"<pre><code>link = ['https://www.gov.br/anp/pt-br/centrais-de-conteudo/dados-abertos/arquivos/shpc/dsas/ca/precos-semestrais-ca.zip'\n         ,'https://www.gov.br/anp/pt-br/centrais-de-conteudo/dados-abertos/arquivos/shpc/dsas/ca/ca-2022-02.zip'\n         ,'https://www.gov.br/anp/pt-br/centrais-de-conteudo/dados-abertos/arquivos/shpc/dsas/ca/ca-2023-01.zip'\n       ]\n\narquivo = ['arquivo_primeiro_semestre_2022.zip'\n           ,'arquivo_segundo_semestre_2022.zip'\n           ,'arquivo_primeiro_semestre_2023.zip']\n\ndiretorio = fr'C:\\Temp\\Python_YT\\Download_File\\Combustiveis'\n\nfromaddr = \"dbaassists@gmail.com\"\n\ntoaddr = \"dbaassists@gmail.com\"\n\ndownload_arquivo(link, arquivo, diretorio, fromaddr, toaddr)\n</code></pre>"},{"location":"fluxo/#3-descompactar-arquivos","title":"3 - Descompactar Arquivos","text":"<pre><code>diretorio_zip = fr'C:\\Temp\\Python_YT\\Download_File\\Combustiveis'\ndiretorio_unzip = fr'C:\\Temp\\Python_YT\\Download_File\\Combustiveis\\output'\n\ndescompacta_arquivo(diretorio_zip,diretorio_unzip)\n</code></pre>"},{"location":"fluxo/#4-ingestao-dos-arquivos","title":"4 - Ingest\u00e3o dos Arquivos","text":"<pre><code>diretorioarquivo = fr'C:\\Temp\\Python_YT\\Download_File\\Combustiveis\\output'\nseparador=';'\ncabecalho=0\ncolunas=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]\nnomecolunas=['Regiao'\n             ,'UF'\n             ,'NomMunicipio'\n             ,'NomRevenda'\n             ,'NumCNPJRevenda'\n             ,'NomLogradouro'\n             ,'NrEndereco'\n             ,'NomComplemento'\n             ,'NomBairro'\n             ,'NumCep'\n             ,'DscProduto'\n             ,'DtColeta'\n             ,'VlrVenda'\n             ,'VlrCompra'\n             ,'UnMedida'\n             ,'DscBandeira'\n            ]\ntipodado={'Regiao':'str'\n,'UF':'str'\n,'NomMunicipio':'str'\n,'NomRevenda':'str'\n,'NumCNPJRevenda':'str'\n,'NrEndereco':'str'\n,'NomLogradouro':'str'\n,'NomComplemento':'str'\n,'NomBairro':'str'\n,'NumCep':'str'\n,'DscProduto':'str'\n,'DtColeta':'str'\n,'VlrVenda':'str'\n,'VlrCompra':'str'\n,'UnMedida':'str'\n,'DscBandeira':'str'\n}\ncolunatipodata=['DtColeta']\n\ndfCombustivel = ingestao_arquivos(diretorioarquivo\n                       , separador\n                       , cabecalho\n                       , colunas\n                       , nomecolunas\n                       , tipodado\n                       , colunatipodata)\n</code></pre>"},{"location":"fluxo/#5-tratamento-dos-dados","title":"5 - Tratamento dos Dados","text":"<pre><code>#TRATAMENTO DE VALORES NULOS    \ndfCombustivel['NomComplemento'].fillna('NI',inplace=True)\ndfCombustivel['NomLogradouro'].fillna('NI',inplace=True)\ndfCombustivel['NomBairro'].fillna('NI',inplace=True)\ndfCombustivel['VlrCompra'].fillna('0',inplace=True)\n\n#CRIA\u00c7\u00c3O DE COLUNAS NOVAS DE TEMPO - ANO, MES, ANOMES\ndfCombustivel['Ano'] = dfCombustivel['DtColeta'].dt.strftime('%Y')\ndfCombustivel['Mes'] = dfCombustivel['DtColeta'].dt.strftime('%m')\ndfCombustivel['AnoMes']  = dfCombustivel['DtColeta'].dt.strftime('%Y%m')\n\n#CRIA\u00c7\u00c3O DE COLUNA ENDERECO COMPLETO \ndfCombustivel['NomEnderecoCompleto'] = dfCombustivel['NomLogradouro'] \\\n                                        + ', NR: ' \\\n                                        + dfCombustivel['NrEndereco'] \\\n                                        + ', COMPLEMENTO: ' \\\n                                        + dfCombustivel['NomComplemento'] \\\n                                        + ' - BAIRRO: ' \\\n                                        + dfCombustivel['NomBairro']\n\ndfCombustivel['NomEnderecoCompleto'].fillna('NI',inplace=True)\n\n#CONVERS\u00c3O DE TIPO DE DADOS\ndfCombustivel['VlrCompra'] = dfCombustivel['VlrCompra'].str.replace(',', '.').astype(float)\ndfCombustivel['VlrVenda'] = dfCombustivel['VlrVenda'].str.replace(',', '.').astype(float)\n</code></pre>"},{"location":"fluxo/#6-calculo-do-preco-medio-de-combustiveis","title":"6 - C\u00e1lculo do Pre\u00e7o M\u00e9dio de Combustiveis","text":"<pre><code>resultEstadosAtuantes = dfCombustivel[((dfCombustivel['UF']=='CE') &amp; (dfCombustivel['NomMunicipio']=='JUAZEIRO DO NORTE')) |\n                                     ((dfCombustivel['UF']=='MA') &amp; (dfCombustivel['NomMunicipio']=='IMPERATRIZ')) |\n                                      ((dfCombustivel['UF']=='RJ') &amp; (dfCombustivel['NomMunicipio']=='SAO GONCALO')) |\n                                      ((dfCombustivel['UF']=='SP') &amp; (dfCombustivel['NomMunicipio']=='BARUERI')) \n                                     ].groupby(['Regiao'\n                                                ,'UF'\n                                                ,'NomMunicipio'\n                                                ,'NomBairro'\n                                                ,'NomRevenda'\n                                                ,'NomEnderecoCompleto'\n                                                ,'DscProduto'\n                                                ,'AnoMes'\n                                                ,'Ano'\n                                                ,'Mes'\n                                                ],as_index=False).agg(VlrMedio=('VlrVenda','mean'))\n</code></pre>"},{"location":"fluxo/#7-pivot-da-tabela-de-dados","title":"7 - Pivot da Tabela de Dados","text":"<pre><code>resultRelatorioFinal = resultEstadosAtuantes.pivot(index=['Regiao'\n                                                ,'UF'\n                                                ,'NomMunicipio'\n                                                ,'NomBairro'\n                                                ,'NomRevenda'\n                                                ,'NomEnderecoCompleto'\n                                                ,'DscProduto'\n                                                ], columns=\"AnoMes\", values=\"VlrMedio\").fillna(0).reset_index()\n</code></pre>"},{"location":"fluxo/#8-envio-das-informacoes","title":"8 - Envio das Informa\u00e7\u00f5es","text":"<pre><code>listaUF = resultRelatorioFinal['UF'].unique()\n\nresultRelatorioFinal\ndiretorioArquivo = 'C:\\Temp\\Python_YT\\Download_File\\Combustiveis\\enviado'\nfromaddr = \"dbaassists@gmail.com\"\ntoaddr = \"dbaassists@gmail.com\"\nlistaUF\n\nenvia_arquivo_unidades(resultRelatorioFinal, diretorioArquivo ,fromaddr ,toaddr ,listaUF)\n</code></pre>"},{"location":"funcao/","title":"C\u00f3digos","text":""},{"location":"funcao/#0-bibliotecas","title":"0 - Bibliotecas","text":"<pre><code>import warnings\nimport pandas as pd\nimport os\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n</code></pre>"},{"location":"funcao/#1-notificacao-de-erro","title":"1 - Notifica\u00e7\u00e3o de Erro","text":"<pre><code>def envia_notificacao_erro(mensagem, detalhe_msg, link, fromaddr, toaddr):\n\n    msg = MIMEMultipart() \n    msg['From'] = fromaddr \n    msg['To'] = toaddr \n\n    msg['Subject'] = mensagem\n    body = detalhe_msg\n\n    msg.attach(MIMEText(body, 'plain')) \n\n    s = smtplib.SMTP('smtp.gmail.com', 587) \n    s.starttls() \n    s.login(fromaddr, \"\") \n    text = msg.as_string() \n    s.sendmail(fromaddr, toaddr, text) \n    s.quit()   \n</code></pre>"},{"location":"funcao/#2-download-dos-arquivos","title":"2 - Download dos Arquivos","text":"<pre><code>def download_arquivo(links, arquivo, diretorio, fromaddr, toaddr):\n\n    try:\n\n        for i in range(len(links)):\n\n            nome_arquivo_local = diretorio+'\\\\'+arquivo[i]\n\n            print(nome_arquivo_local)\n\n            if requests.get(links[i]).status_code == 200:\n\n                if not os.path.exists(diretorio):\n                    os.makedirs(diretorio)\n\n                response = requests.get(links[i])\n\n                with open(nome_arquivo_local, 'wb') as arquivo_local:\n                    arquivo_local.write(response.content)\n\n                    print(f'Download do arquivo realizado e salvo no diret\u00f3rio {nome_arquivo_local}')\n\n            else:\n\n                print(\"O servidor est\u00e1 indispon\u00edvel.\")\n                mensagem = \"[Ingest\u00e3o ANP] Link inv\u00e1lido\"\n                detalhe_msg = \"Ol\u00e1 tudo bem? \\nLink {0} inv\u00e1lido.\".format(links[i])\n                envia_notificacao_erro(mensagem, detalhe_msg, links[i], fromaddr, toaddr)\n\n    except Exception as e:\n\n        print(\"Servidor Inexistente. Erro:\", e)\n        mensagem = \"[Ingest\u00e3o ANP] Erro Processamento - Erro Fun\u00e7\u00e3o download_arquivo().\"\n        detalhe_msg = \"Ol\u00e1 tudo bem? \\nOcorreu um erro ao executar a fun\u00e7\u00e3o download_arquivo().\\n\\nErro: {0}\".format(e)\n        envia_notificacao_erro(mensagem, detalhe_msg, links[i], fromaddr, toaddr) \n</code></pre>"},{"location":"funcao/#3-descompactar-arquivos","title":"3 - Descompactar Arquivos","text":"<pre><code>def descompacta_arquivo(diretorio_zip,diretorio_unzip):\n\n    for arquivo_zip in os.listdir(diretorio_zip):\n\n        print(arquivo_zip)\n\n        if (os.path.splitext(arquivo_zip)[1]=='.zip') and ( os.path.isfile(fr'{diretorio_zip}\\{arquivo_zip}')):\n\n            # Abra o arquivo zip para leitura\n            with zipfile.ZipFile(f'{diretorio_zip}\\{arquivo_zip}', 'r') as zip_externo:\n\n                zip_externo.extractall(path=diretorio_unzip) \n</code></pre>"},{"location":"funcao/#4-ingestao-arquivos","title":"4 - Ingest\u00e3o Arquivos","text":"<pre><code>def ingestao_arquivos(diretorioarquivo\n                      , separador\n                      , cabecalho\n                      , colunas\n                      , nomecolunas\n                      , tipodado\n                      , colunatipodata):\n\n    dfFinal = pd.DataFrame()\n\n    for arquivo in os.listdir(diretorioarquivo):\n\n        path = diretorioarquivo + '\\\\' + arquivo\n\n        df = pd.read_csv(path\n                        , sep=separador\n                        , header=cabecalho\n                        , usecols=colunas\n                        , names=nomecolunas\n                        , dtype=tipodado\n                        , parse_dates=colunatipodata)\n\n        dfFinal = pd.concat([dfFinal, df],ignore_index=True)\n\n    return dfFinal \n</code></pre>"},{"location":"funcao/#5-envio-de-arquivos-para-as-filiais","title":"5 - Envio de Arquivos para as Filiais","text":"<pre><code>def envia_arquivo_unidades(df, diretorioArquivo ,fromaddr ,toaddr ,listaUF):\n\n    for lista_uf in listaUF:\n\n        df[df['UF']==lista_uf].to_csv('{0}\\\\lista_{1}.csv'.format(diretorioArquivo, lista_uf),sep=';',index=False)\n\n        print('Arquivo Estado do ' + lista_uf + ' gerado com sucesso!')\n\n        msg = MIMEMultipart() \n        msg['From'] = fromaddr \n        msg['To'] = toaddr \n        msg['Subject'] = \"Arquivo de Varia\u00e7\u00e3o dos Pre\u00e7os dos Combust\u00edveis do Estado {0}\".format(lista_uf)\n        body = \"Ol\u00e1 tudo bem? \\nSegue em anexo o arquivo de Varia\u00e7\u00e3o dos Pre\u00e7os dos Combust\u00edveis.\".format(lista_uf)\n        msg.attach(MIMEText(body, 'plain')) \n        filename = \"lista_{0}.csv\".format(lista_uf)\n        attachment = open(\"{0}\\lista_{1}.csv\".format(diretorioArquivo, lista_uf), \"rb\")\n        p = MIMEBase('application', 'octet-stream') \n        p.set_payload((attachment).read()) \n        encoders.encode_base64(p) \n\n        p.add_header('Content-Disposition', \"attachment; filename= %s\" % filename) \n        msg.attach(p) \n        s = smtplib.SMTP('smtp.gmail.com', 587) \n        s.starttls() \n        s.login(fromaddr, \"\") \n        text = msg.as_string() \n        s.sendmail(fromaddr, toaddr, text) \n        s.quit()    \n</code></pre>"},{"location":"regras/","title":"Regras de Neg\u00f3cio","text":"<p>Regras de neg\u00f3cio que dever\u00e3o ser aplicadas.</p>"},{"location":"regras/#1-download-das-informacoes","title":"1 - Download das Informa\u00e7\u00f5es","text":"<ul> <li>Origem das Informa\u00e7\u00f5es: Site ANP</li> <li>Per\u00edodo: 2022 e 2023<ul> <li>1\u00ba Semetre de 2022</li> <li>2\u00ba Semetre de 2022</li> <li>3\u00ba Semetre de 2023</li> </ul> </li> <li>Link para realizar o download.<ul> <li>https://www.gov.br/anp/pt-br/centrais-de-conteudo/dados-abertos/arquivos/shpc/dsas/ca/precos-semestrais-ca.zip</li> <li>https://www.gov.br/anp/pt-br/centrais-de-conteudo/dados-abertos/arquivos/shpc/dsas/ca/ca-2022-02.zip</li> <li>https://www.gov.br/anp/pt-br/centrais-de-conteudo/dados-abertos/arquivos/shpc/dsas/ca/ca-2023-01.zip</li> </ul> </li> </ul>"},{"location":"regras/#2-tratamento-dos-dados","title":"2 - Tratamento dos Dados","text":"<ul> <li>2.1 - Definir quais colunas ser\u00e3o importadas;</li> <li>2.2 - Ajustar a nomenclatura das colunas;</li> <li>2.3 - Definir o DataType das colunas;</li> <li>2.4 - Tratar colunas de data;</li> <li>2.5 - Tratar colunas nulas;<ul> <li>2.5.1 - Tratar colunas nulas - Colunas do Tipo String, informar 'NI';</li> <li>2.5.2 - Tratar colunas nulas - Colunas do Tipo Num\u00e9rico, informar 0 (zero);</li> </ul> </li> <li>2.6 - A partir da coluna Data Coleta, criar outras tr\u00eas colunas:<ul> <li>2.6.1 - AnoMes, formato AAAAMM;</li> <li>2.6.2 - Ano, formato AAAA;</li> <li>2.6.3 - Mes, formato MM;</li> </ul> </li> <li>2.7 - Criar coluna \"Endere\u00e7o Completo\" com o formato:<ul> <li>2.7.1 - Coluna(\"Nome da Rua\") + \", NR: \" + Coluna(\"Nome da Rua\") + ', COMPLEMENTO: ' + Coluna(\"Complemento\") + ' - BAIRRO: ' + Coluna(\"Bairro\")</li> </ul> </li> <li>2.8 - Tratar o DataType da Coluna \"Valor de Venda\" para num\u00e9rico;</li> <li>2.9 - Eliminar a Coluna \"Valor de Compra\";</li> </ul>"},{"location":"regras/#3-filtrar-dados-utilizados","title":"3 - Filtrar Dados Utilizados","text":"<ul> <li> <p>3.1 - Dados dos Estados \"RJ\", \"SP\", \"CE\" e \"MA\", onde:</p> <ul> <li>3.1.1 - Estado \"CE\", Municipio \"JUAZEIRO DO NORTE\";</li> <li>3.1.2 - Estado \"MA\", Municipio \"IMPERATRIZ\";</li> <li>3.1.3 - Estado \"RJ\", Municipio \"SAO GONCALO\";</li> <li>3.1.4 - Estado \"SP\", Municipio \"BARUERI\";</li> </ul> Estado Munic\u00edpio Cear\u00e1 - CE Juazeiro do Norte Maranh\u00e3o - MA Imperatriz Rio de Janeiro - RJ S\u00e3o Gon\u00e7alo S\u00e3o Paulo - SP Barueri </li> </ul>"},{"location":"regras/#4-calcular-a-media-de-venda-de-cada-combustivel","title":"4 - Calcular a m\u00e9dia de venda de cada combustivel","text":"<ul> <li> <p>4.1 - Agrupar os dados pelas colunas:</p> <ul> <li>Regiao</li> <li>UF</li> <li>NomMunicipio</li> <li>NomBairro</li> <li>NomRevenda</li> <li>NomEnderecoCompleto</li> <li>DscProduto</li> <li>AnoMes</li> <li>Ano</li> <li>Mes</li> </ul> </li> <li> <p>4.2 - Calcular a m\u00e9dia sobre a coluna \"Valor de Venda\":</p> </li> </ul>"},{"location":"regras/#5-pivot-das-colunas-transformar-linhas-em-colunas","title":"5 - Pivot das Colunas (Transformar linhas em colunas)","text":"<ul> <li>5.1 - Colunas que n\u00e3o dever\u00e3o mudar:<ul> <li>Regiao</li> <li>UF</li> <li>NomMunicipio</li> <li>NomBairro</li> <li>NomRevenda</li> <li>NomEnderecoCompleto</li> <li>DscProduto</li> </ul> </li> <li>5.2 - Linha que vai virar coluna:<ul> <li>AnoMes</li> <li>VlrMedio</li> </ul> </li> <li>5.3 - Colunas com valores nulos dever\u00e3o ser preenchidas com zero:</li> </ul>"},{"location":"regras/#6-envio-informacoes","title":"6 - Envio Informa\u00e7\u00f5es","text":"<ul> <li> <p>6.1 - O envio do e-mail dever\u00e1 obedecer a seguinte regra:</p> <ul> <li>3.1.1 - Estado \"CE\", xpto_ce@empresatransporte.com.br;</li> <li>3.1.2 - Estado \"MA\", xpto_ma@empresatransporte.com.br;</li> <li>3.1.3 - Estado \"RJ\", xpto_rj@empresatransporte.com.br;</li> <li>3.1.4 - Estado \"SP\", xpto_sp@empresatransporte.com.br;</li> </ul> Estado Munic\u00edpio E-mail Cear\u00e1 - CE Juazeiro do Norte xpto_ce@empresatransporte.com.br Maranh\u00e3o - MA Imperatriz xpto_ma@empresatransporte.com.br Rio de Janeiro - RJ S\u00e3o Gon\u00e7alo xpto_rj@empresatransporte.com.br S\u00e3o Paulo - SP Barueri xpto_sp@empresatransporte.com.br </li> </ul>"}]}